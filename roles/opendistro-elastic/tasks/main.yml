---
#################
###<blame jareking>
### https://docs.ansible.com/ansible/latest/modules/ec2_metadata_facts_module.html
#################

#if the file exists the play will stop immediately.
- name: Check that the ansible-lock exists
  stat:
    path: /ansible-lock
  register: ansible_lock_initial_result

- name: STOP - if ansible-lock exists
  meta: end_host
  when: ansible_lock_initial_result.stat.exists


- name: Creates lock file if it doesnt exist
  file: path=/ansible-lock state=touch owner=root group=root mode=0775
  when: not ansible_lock_initial_result.stat.exists

##################

# tasks file for opendistro-elastic
- name: set the cluster name
  shell: echo $(/usr/bin/aws ec2 describe-tags --filters "Name=resource-id,Values=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)" --output=text |grep cluster | awk '{print $5}')
  register: ClusterName

- name: set the role
  shell: echo $(/usr/bin/aws ec2 describe-tags --filters "Name=resource-id,Values=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)" --output=text |grep role | awk '{print $5}')
  register: ClusterRole

- name: set the ES_Seed
  shell: /etc/ansible/hosts| jq .tag_ES_Seed_{{ ClusterName.stdout }}_master
  register: ES_Seed

###hack alert - this is terrible, and should be dns and not this nasty crap
- name: set the Initial Master Nodes to bootstrap 1
  shell: /etc/ansible/hosts| jq .tag_Name_elasticsearch_{{ ClusterName.stdout }}_master_1[0]
  register: ES_Initial_Masters_1

- name: set the Initial Master Nodes to bootstrap 2 
  shell: /etc/ansible/hosts| jq .tag_Name_elasticsearch_{{ ClusterName.stdout }}_master_2[0]
  register: ES_Initial_Masters_2

- name: set the Initial Master Nodes to bootstrap 3
  shell: /etc/ansible/hosts| jq .tag_Name_elasticsearch_{{ ClusterName.stdout }}_master_3[0]
  register: ES_Initial_Masters_3
#################
###</blame jareking>
#################
- name: add opendistroforelastic repository keys
  apt_key:
    url: https://d3g5vo6xdbdb9a.cloudfront.net/GPG-KEY-opendistroforelasticsearch
    state: present
  become: yes

- name: Wait for automatic system updates
  become: yes
  shell: while fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 1; done;   

- name: add openjdk repository
  apt_repository:
    repo: ppa:openjdk-r/ppa
    state: present
  become: yes

- name: Wait for automatic system updates
  become: yes
  shell: while fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 1; done;  

- name: Check if openjdk-11-jdk is installed
  command: dpkg-query -W openjdk-11-jdk
  register: openjdk_11_jdk_check_deb
  failed_when: openjdk_11_jdk_check_deb.rc > 1
  changed_when: openjdk_11_jdk_check_deb.rc == 1

- name: install openjdk
  apt:
    name: openjdk-11-jdk
    update_cache: yes
  become: yes
  when: openjdk_11_jdk_check_deb.rc == 1
  

#- name: openjdk_response
#  debug: 
#    msg: openjdk_reponse is {{ openjdk_reponse.stdout }} 
#  until: "'success' in openjdk_reponse.stdout"
#  retries: 20
#  delay: 15


- name: add opendistro elastic repository
  apt_repository:
    repo: deb https://d3g5vo6xdbdb9a.cloudfront.net/apt stable main
    state: present
    filename: opendistroforelasticsearch
  become: yes

#we should do a specific version check for upgrades.
- name: Check if elasticsearch-oss-7.8.0-amd64 is installed
  command: dpkg-query -W elasticsearch-oss
  register: elasticsearch_oss_check_deb
  failed_when: elasticsearch_oss_check_deb.rc > 1
  changed_when: elasticsearch_oss_check_deb.rc == 1

- name: Download elasticsearch_oss
  get_url:
    url="https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-7.8.0-amd64.deb"
    dest="/home/ubuntu/elasticsearch-oss-7.8.0-amd64.deb"
  when: elasticsearch_oss_check_deb.rc == 1

- name: Install elasticsearch-oss-7.8.0-amd64
  apt: deb="/home/ubuntu/elasticsearch-oss-7.8.0-amd64.deb"
  become: yes
  when: elasticsearch_oss_check_deb.rc == 1

########################
- name: Check if opendistroforelasticsearch is installed
  command: dpkg-query -W opendistroforelasticsearch
  register: opendistroforelasticsearch_check_deb
  failed_when: opendistroforelasticsearch_check_deb.rc > 1
  changed_when: opendistroforelasticsearch_check_deb.rc == 1

- name: install opendistroforelasticsearch
  apt:
    name: opendistroforelasticsearch
    update_cache: yes
  become: yes
  when: opendistroforelasticsearch_check_deb.rc == 1

# - name: configure elasticsearch password file
#   template:
#     src: templates/internal_users.yml.j2
#     dest: /usr/share/elasticsearch/plugins/opendistro_security/securityconfig/internal_users.yml
#     owner: root
#     group: root
#     mode: 0644
#   become: yes
#   register: elasticsearch_users

#should this be moved out to it's own role?
########################
#lvm stuff - data nodes only
# need to make sure we find and mount any and all nvme devices.
########################
- name: Create a volume group on top of /dev/nvme2n1 with physical extent size = 139G
  lvg:
    vg: vg.elasticsearch
    pvs: /dev/nvme1n1
    pesize: 139G
  when: ansible_facts['hostname'] is search("data")
  

- name: Create a logical volume for elasticsearch
  lvol:
    vg: vg.elasticsearch
    lv: esdata
    size: 100%VG
    pvs: /dev/nvme1n1
  when: ansible_facts['hostname'] is search("data")

- name: create_fs | creating new filesystem on new LVM logical volume(s)
  filesystem:
    fstype: ext4
    dev: "/dev/vg.elasticsearch/esdata"
    resizefs: yes
  when: ansible_facts['hostname'] is search("data")

- name: Mount /dev/vg.elasticsearch/esdata at /mnt/data/elasticsearch
  mount:
    path: /mnt/data/elasticsearch
    src: /dev/vg.elasticsearch/esdata
    fstype: ext4
    state: mounted
  when: ansible_facts['hostname'] is search("data")

#this has to run on both master and data nodes
- name: Creates directory
  file: path=/mnt/data/elasticsearch state=directory owner=elasticsearch group=elasticsearch mode=0775 recurse=yes


########################
- name: ec2 hostname
  debug:
    msg: ec2 {{ ansible_ec2_placement_availability_zone }} 

- name: ansible hostname
  debug:
    msg: ansible {{ ansible_facts['hostname'] }} 

- name: local hostname 
  debug: 
    msg: local_hostname {{ local_hostname.stdout }} 

- name: configure elasticsearch.yml
  template:
    src: templates/elasticsearch.yml.j2
    dest: /etc/elasticsearch/elasticsearch.yml
    owner: root
    group: elasticsearch
    mode: 0660
  become: yes
  register: elasticsearch_configuration
  notify:
    - elasticsearch restart

- name: configure jvm.options
  template:
    src: templates/jvm.options.j2
    dest: /etc/elasticsearch/jvm.options
    owner: root
    group: elasticsearch
    mode: 0660
  become: yes
  register: jvm_configuration
  notify:
    - elasticsearch restart


- name: configure telegraf plugin for elasticsearch 
  template:
     src: files/telegraf-elasticsearch.conf
     dest: /etc/telegraf/telegraf.d/elasticsearch.conf
     owner: telegraf
     group: telegraf
     mode: 0644
  become: yes
  notify:
    - telegraf restart

#performance analyzer
#disabled because it's an unknown at this point.    
- name: remove opendistro-performance-analyzer service to onboot
  service: name=opendistro-performance-analyzer enabled=no
  become: yes
  
- name: stop opendistro-performance-analyzer service
  service: name=opendistro-performance-analyzer state=stopped
  become: yes

- name: add elasticsearch service to onboot
  service: name=elasticsearch enabled=yes
  become: yes

- name: start elasticsearch service
  service: name=elasticsearch state=started
  become: yes
  ignore_errors: True


#- name: cluster health green
#  uri: url= http://localhost:9200/_cluster/health method=GET
#  register: cluster_health_response
#  debug:
#     msg: cluster health is {{ cluster_health_response.json.status}}
#   until: "response.json.status == 'green'"
#   retries: 500
#   delay: 15

#- name: cluster status
#  debug:
#    msg: cluster health is {{ cluster_health_response.json.status}}
#   until: "cluster_health_response.json.status == 'green'"
#   retries: 500
#   delay: 15

#https://stackoverflow.com/questions/31618967/how-do-i-write-an-ansible-handler-with-multiple-tasks#31618968
- name: Remove ansible-lock file
  file: path=/ansible-lock state=absent