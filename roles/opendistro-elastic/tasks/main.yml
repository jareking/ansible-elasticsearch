---
#################
###<blame jareking>
#################

# tasks file for opendistro-elastic
- name: set the cluster name
  shell: echo $(/usr/bin/aws ec2 describe-tags --filters "Name=resource-id,Values=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)" --output=text |grep cluster | awk '{print $5}')
  register: ClusterName

- name: set the role
  shell: echo $(/usr/bin/aws ec2 describe-tags --filters "Name=resource-id,Values=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)" --output=text |grep role | awk '{print $5}')
  register: ClusterRole

- name: set the ES_Seed
  shell: /etc/ansible/hosts| jq .tag_ES_Seed_{{ ClusterName.stdout }}_master
  register: ES_Seed

###hack alert - this is terrible, and should be dns and not this nasty crap
- name: set the Initial Master Nodes to bootstrap 1
  shell: /etc/ansible/hosts| jq .tag_Name_elasticsearch_{{ ClusterName.stdout }}_master_1[0]
  register: ES_Initial_Masters_1

- name: set the Initial Master Nodes to bootstrap 2 
  shell: /etc/ansible/hosts| jq .tag_Name_elasticsearch_{{ ClusterName.stdout }}_master_2[0]
  register: ES_Initial_Masters_2

- name: set the Initial Master Nodes to bootstrap 3
  shell: /etc/ansible/hosts| jq .tag_Name_elasticsearch_{{ ClusterName.stdout }}_master_3[0]
  register: ES_Initial_Masters_3
#################
###</blame jareking>
#################
- name: Wait for automatic system updates
  become: yes
  shell: 	while sudo fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 1; done;


- name: add opendistroforelastic repository keys
  apt_key:
    url: https://d3g5vo6xdbdb9a.cloudfront.net/GPG-KEY-opendistroforelasticsearch
    state: present
  become: yes
  # wait_for:
  #   path: /var/lib/dpkg/lock-frontend
  #   state: absent

- name: add openjdk repository
  apt_repository:
    repo: ppa:openjdk-r/ppa
    state: present
  become: yes

- name: install openjdk
  apt:
    name: openjdk-11-jdk
    update_cache: yes
  become: yes

- name: add opendistro elastic repository
  apt_repository:
    repo: deb https://d3g5vo6xdbdb9a.cloudfront.net/apt stable main
    state: present
    filename: opendistroforelasticsearch.list
  become: yes


- name: Check if elasticsearch-oss-7.8.0-amd64 is installed
  command: dpkg-query -W elasticsearch-oss
  register: elasticsearch_oss_check_deb
  failed_when: elasticsearch_oss_check_deb.rc > 1
  changed_when: elasticsearch_oss_check_deb.rc == 1

- name: Download elasticsearch_oss
  get_url:
    url="https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-7.8.0-amd64.deb"
    dest="/home/ubuntu/elasticsearch-oss-7.8.0-amd64.deb"
  when: elasticsearch_oss_check_deb.rc == 1

- name: Install elasticsearch-oss-7.8.0-amd64
  apt: deb="/home/ubuntu/elasticsearch-oss-7.8.0-amd64.deb"
  become: yes

  #sudo: true
  when: elasticsearch_oss_check_deb.rc == 1

########################
- name: install opendistroforelasticsearch
  apt:
    name: opendistroforelasticsearch
    update_cache: yes
  become: yes

- name: configure elasticsearch.yml
  template:
    src: templates/elasticsearch.yml.j2
    dest: /etc/elasticsearch/elasticsearch.yml
    owner: root
    group: elasticsearch
    mode: 0660
  become: yes
  register: elasticsearch_configuration
  notify:
    - elasticsearch restart

# - name: configure elasticsearch password file
#   template:
#     src: templates/internal_users.yml.j2
#     dest: /usr/share/elasticsearch/plugins/opendistro_security/securityconfig/internal_users.yml
#     owner: root
#     group: root
#     mode: 0644
#   become: yes
#   register: elasticsearch_users

#should this be moved out to it's own role?
########################
#lvm stuff - data nodes only
# need to make sure we find and mount any and all nvme devices.
########################
#this has to run on both master and data nodes
- name: Creates directory
  file: path=/mnt/data/elasticsearch state=directory owner=elasticsearch group=elasticsearch mode=0775 recurse=yes

- name: Create a volume group on top of /dev/nvme2n1 with physical extent size = 139G
  lvg:
    vg: vg.elasticsearch
    pvs: /dev/nvme1n1
    pesize: 139G
  when: ansible_facts['hostname'] is search("data")
  

- name: Create a logical volume for elasticsearch
  lvol:
    vg: vg.elasticsearch
    lv: esdata
    size: 100%VG
    pvs: /dev/nvme1n1
  when: ansible_facts['hostname'] is search("data")

- name: create_fs | creating new filesystem on new LVM logical volume(s)
  filesystem:
    fstype: ext4
    dev: "/dev/vg.elasticsearch/esdata"
    resizefs: yes
  when: ansible_facts['hostname'] is search("data")

- name: Mount /dev/vg.elasticsearch/esdata at /mnt/data/elasticsearch
  mount:
    path: /mnt/data/elasticsearch
    src: /dev/vg.elasticsearch/esdata
    fstype: ext4
    state: mounted
  when: ansible_facts['hostname'] is search("data")


########################


- name: add elasticsearch service to onboot
  service: name=elasticsearch enabled=yes
  become: yes

- name: start elasticsearch service
  service: name=elasticsearch state=started
  become: yes
